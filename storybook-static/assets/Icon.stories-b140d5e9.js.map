{"version":3,"file":"Icon.stories-b140d5e9.js","sources":["../../src/Icon/Icon.stories.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { Icon } from './Icon';\nimport { icons } from '../shared/icons';\n\nconst Meta = styled.div`\n  color: #666;\n  font-size: 12px;\n`;\n\nconst Item = styled.li`\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  flex: 0 1 20%;\n  min-width: 120px;\n\n  padding: 0px 7.5px 20px;\n\n  svg {\n    margin-right: 10px;\n    width: 24px;\n    height: 24px;\n  }\n\n  ${(props) =>\n    props.minimal &&\n    css`\n      flex: none;\n      min-width: auto;\n      padding: 0;\n      background: #fff;\n      border: 1px solid #666;\n\n      svg {\n        display: block;\n        margin-right: 0;\n        width: 48px;\n        height: 48px;\n      }\n    `};\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-flow: row wrap;\n  list-style: none;\n`;\n\nexport default {\n  title: 'Design System/Icon',\n  component: Icon,\n};\n\nexport const Labels = {\n  render: () => (\n    <>\n      There are {Object.keys(icons).length} icons\n      <List>\n        {Object.keys(icons).map((key) => (\n          <Item key={key}>\n            <Icon icon={key} aria-hidden />\n            <Meta>{key}</Meta>\n          </Item>\n        ))}\n      </List>\n    </>\n  ),\n};\n\nexport const NoLabels = {\n  name: 'no labels',\n  render: () => (\n    <List>\n      {Object.keys(icons).map((key) => (\n        <Item minimal key={key}>\n          <Icon icon={key} aria-label={key} />\n        </Item>\n      ))}\n    </List>\n  ),\n};\n\nexport const Inline = {\n  render: (args) => (\n    <>\n      this is an inline <Icon {...args} /> icon (default)\n    </>\n  ),\n  args: {\n    icon: 'facehappy',\n    'aria-label': 'Happy face',\n  },\n};\n\nexport const Block = {\n  render: (args) => (\n    <>\n      this is a block <Icon {...args} /> icon\n    </>\n  ),\n  args: {\n    icon: 'facehappy',\n    'aria-label': 'Happy face',\n    block: true,\n  },\n};\n"],"names":["Meta","_styled","target","name","styles","Item","toString","minimal","_EMOTION_STRINGIFIED_CSS_ERROR__","List","title","component","Icon","Labels","render","jsxs","Fragment","Object","key","icons","length","jsx","keys","map","NoLabels","args","Inline","icon","block"],"mappings":"uQAKA,MAAMA,EAAIC,EAAA,MAAA,CAAAC,OAAA,WAAA,CAAA,EAAA,CAAAC,KAAA,SAAAC,OAAA,2BAAA,GAAAF,IAAAA,EAAAA,CAAAA,KAAAA,UAAAA,OAAAA,oIAAAA,EAAA,MAAAG,EAAAJ,EAAA,KAAA,CAAAC,OAAA,WAAA,CAAA,EAAA,+JAGRI,GAAAA,EAAAC,SAAAC,EAmCQ,KAAAC,EAAAR,EAAA,KAAA,CAAAC,OAAA,WAAA,CAAA,EAAA,CAAAC,KAAA,UAAAC,OAAA,iDAAA,CAIT,EAGCM,EAAAA,CACAC,MAAAA,qBACDA,UAAAC,CAAA,EAKeC,GAChBC,OAAWA,IACXC,EAAAC,EAAA,CAAA,SAAA,CAAA,aAEiBC,OAAOC,KAAKC,CAAW,EAAAC,OAAA,SACxCC,EAAAZ,GACUQ,SAAMK,OAAAA,KACNH,CAAA,EAAAI,IACEL,GAAAH,EAAAV,EACR,CAAA,SAAA,CAAAgB,EAAAT,EAAA,CAAA,KAAAM,EAAA,cAAA,GAAA,EAEHG,EAAArB,GAAAkB,SAAAA,CAAA,CAAA,CAAA,GAHWA,CAKL,CACY,EACjBJ,CAAAA,EAEI,CAGN,EAICU,EAAA,CAEMrB,KAAA,YACLW,OAASW,IAEXJ,EAAAZ,EAAA,CAEGQ,gBAAAK,KAAAH,CAAA,EAAAI,IACKL,GAAAG,EAAAhB,GAAA,QAAA,GACE,SAAWgB,EAAAT,EAAA,CAAA,KAAAM,EAAA,aAAAA,CAAA,CAAA,CAAA,EADbA,CAEJ,CACF,CACD,CAAA,GAOEQ,EAAA,CACDD,UACEE,EAAAA,EAAAA,CAAAA,SAAAA,CAAAA,qBAC0BN,EAAAT,EAAAa,CAAAA,GAAAA,EAAA,EAAA,iBAAA,EAC1BG,EAEHH,KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}